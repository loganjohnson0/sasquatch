# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:

name: test-coverage.yaml

permissions: read-all

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr, any::xml2
          needs: coverage

      - uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: setup r-reticulate venv
        shell: Rscript {0}
        run: sasquatch::install_saspy()

      - name: setup saspy
        env:
          SAS_ODA_USERNAME: ${{ secrets.SAS_ODA_USERNAME }}
          SAS_ODA_PASSWORD: ${{ secrets.SAS_ODA_PASSWORD }}
        run: |
          oda_username = Sys.getenv("SAS_ODA_USERNAME")
          oda_password = Sys.getenv("SAS_ODA_PASSWORD")
          cat(paste("oda user", oda_username,  "password", oda_password), file = "~/.authinfo")
          saspy_path <- paste0(gsub("Location: ", "", system(paste(reticulate::virtualenv_python("r-saspy"), "-m pip show saspy"), intern = TRUE)[8]), "/saspy")
          cat("SAS_config_names = ['oda']
          
          oda = {
              'java' : '/usr/bin/java',
              'iomhost' : ['odaws01-usw2-2.oda.sas.com','odaws02-usw2-2.oda.sas.com'],
              'iomport' : 8591,
              'encoding' : 'utf-8',
              'authkey' : 'oda'
          }", file = paste0(saspy_path, "/sascfg_personal.py"))
        shell: Rscript {0}

      - name: Test coverage
        run: |
          cov <- covr::package_coverage(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package")
          )
          covr::to_cobertura(cov)
        shell: Rscript {0}

      - uses: codecov/codecov-action@v4
        with:
          # Fail if error if not on PR, or if on PR and token is given
          fail_ci_if_error: ${{ github.event_name != 'pull_request' || secrets.CODECOV_TOKEN }}
          file: ./cobertura.xml
          plugin: noop
          disable_search: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find '${{ runner.temp }}/package' -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
